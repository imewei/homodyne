name: Fast CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHONDONTWRITEBYTECODE: 1
  PYTHONUNBUFFERED: 1
  # Optimize pip installation speed
  PIP_DISABLE_PIP_VERSION_CHECK: 1

jobs:
  # Fast single-job CI for most cases
  fast-ci:
    name: Fast CI (Python 3.12, Ubuntu)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: "pyproject.toml"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[test]" --no-deps --only-binary=all || pip install -e ".[test]"
          # Install ruff for linting
          pip install ruff

      - name: Lint (ruff only)
        run: |
          ruff check homodyne/ --output-format=github
          ruff format --check homodyne/

      - name: Quick tests
        run: |
          pytest homodyne/tests/ -x --tb=line -q \
            -m "not slow and not integration and not mcmc" \
            --maxfail=3 --disable-warnings

      - name: Build check
        run: |
          python -m pip install build
          python -m build --wheel
          pip install dist/*.whl --force-reinstall
          python -c "import homodyne; print('âœ… Package OK')"

  # Extended testing only when needed
  extended-tests:
    name: Extended Tests
    runs-on: ${{ matrix.os }}
    if: >
      github.event_name == 'push' && 
      (github.ref == 'refs/heads/main' || contains(github.event.head_commit.message, '[full-ci]'))
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            python-version: "3.13"
          - os: windows-latest
            python-version: "3.12"
          - os: macos-latest
            python-version: "3.12"
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install system deps
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sudo apt-get update && sudo apt-get install -y build-essential
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            brew install gcc
          fi
        shell: bash

      - name: Install and test
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[test]"
          pytest homodyne/tests/ -x --tb=line -q -m "not slow" --maxfail=2

  # Documentation (only when docs change or on main)
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    if: >
      contains(github.event.head_commit.message, 'docs') || 
      github.ref == 'refs/heads/main'
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Build docs
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[docs]"
          cd docs && make html

      - name: Upload docs
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/_build/html
          retention-days: 7

  # Deploy docs only on main branch pushes
  deploy-docs:
    name: Deploy Docs
    runs-on: ubuntu-latest
    needs: docs
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Download docs
        uses: actions/download-artifact@v4
        with:
          name: documentation
          path: ./docs

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

      - name: Deploy to Pages
        id: deployment
        uses: actions/deploy-pages@v4