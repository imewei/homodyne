{
  "metadata": {
    "_comment": "Project metadata and version information",
    "config_version": "5.2-optimized",
    "description": "Optimized Configuration for High-Performance Homodyne Scattering Analysis",
    "based_on": "He et al. PNAS 2024 - Transport coefficient approach",
    "created_date": "2025-08-16",
    "optimization_level": "high_performance",
    "authors": ["Wei Chen", "Hongrui He"],
    "institution": "Argonne National Laboratory & University of Chicago",
    "experiment_name": "Creep",
    "sample_description": "SiOx-Cys colloidal suspension"
  },

  "performance_settings": {
    "_comment": "High-performance optimization settings",
    "computational": {
      "use_numba_optimization": true,
      "_use_numba_optimization_note": "Enable Numba JIT compilation for 10-100x speedup",
      "fastmath_mode": true,
      "_fastmath_mode_note": "Enable fast math operations (may reduce precision slightly)",
      "parallel_execution": true,
      "_parallel_execution_note": "Use parallel processing where possible",
      "cache_kernels": true,
      "_cache_kernels_note": "Cache compiled kernels for faster repeated execution",
      "optimization_level": "O3",
      "_optimization_level_note": "Compiler optimization level (O1, O2, O3)"
    },
    "memory": {
      "use_memory_efficient_arrays": true,
      "_use_memory_efficient_arrays_note": "Use numpy.empty instead of zeros where possible",
      "enable_garbage_collection": true,
      "_enable_garbage_collection_note": "Force garbage collection for memory optimization",
      "data_type_precision": "float64",
      "_data_type_precision_note": "float32 for speed, float64 for precision",
      "array_buffer_size": 8192,
      "_array_buffer_size_note": "Buffer size for file I/O operations"
    },
    "caching": {
      "enable_result_caching": true,
      "_enable_result_caching_note": "Cache intermediate results for faster repeated calculations",
      "cache_size_limit": 256,
      "_cache_size_limit_note": "Maximum number of cached items",
      "auto_cache_cleanup": true,
      "_auto_cache_cleanup_note": "Automatically clean old cache entries"
    }
  },

  "analysis_settings": {
    "_comment": "Core analysis configuration",
    "static_mode": false,
    "_static_mode_note": "Static analysis (3 params) vs laminar flow (7 params)",
    "effective_parameter_count": 7,
    "_effective_parameter_count_note": "Computed automatically based on static_mode"
  },

  "experimental_data": {
    "_comment": "Optimized data loading configuration",
    "data_folder_path": "./data/C020/",
    "data_file_name": "C020_Cys0_Exp2_Creep_XPCS_20Pa_01_att02_Lq2_001_0001-8000_Twotime.hdf",
    "phi_angles_path": "./data/phi_angles/",
    "phi_angles_file": "phi_list.txt",
    "exchange_key": "exchange",
    "cache_file_path": "./data/C020/",
    "cache_filename_template": "cached_c2_frames_{start_frame}_{end_frame}.npz",
    
    "optimization": {
      "enable_compression": true,
      "_enable_compression_note": "Compress cached data (slower write, faster read)",
      "preload_data": false,
      "_preload_data_note": "Load all data into memory at startup (requires sufficient RAM)",
      "use_memory_mapping": true,
      "_use_memory_mapping_note": "Use memory mapping for large files",
      "data_loading_threads": 4,
      "_data_loading_threads_note": "Number of threads for parallel data loading"
    }
  },

  "analyzer_parameters": {
    "_comment": "Physical and computational parameters",
    "temporal": {
      "dt": 0.1,
      "_dt_note": "Time step between frames [seconds]",
      "start_frame": 1001,
      "_start_frame_note": "First frame number for analysis",
      "end_frame": 2000,
      "_end_frame_note": "Last frame number for analysis"
    },
    "scattering": {
      "wavevector_q": 0.0054,
      "_wavevector_q_note": "Scattering wavevector magnitude [Å⁻¹]"
    },
    "geometry": {
      "stator_rotor_gap": 2000000,
      "_stator_rotor_gap_note": "Gap between shear plates [Å]"
    },
    "computational": {
      "num_threads": 8,
      "_num_threads_note": "Number of CPU threads for parallel computation",
      "auto_detect_cores": true,
      "_auto_detect_cores_note": "Automatically detect optimal thread count",
      "max_threads_limit": 16,
      "_max_threads_limit_note": "Maximum threads to use even if more cores available"
    }
  },

  "initial_parameters": {
    "_comment": "Starting values for optimization",
    "values": [1324.1, -0.014, -0.674361, 0.003, -0.909, 0.0, 0.0],
    "parameter_names": ["D0", "alpha", "D_offset", "gamma_dot_t0", "beta", "gamma_dot_t_offset", "phi0"],
    "_values_note": "Initial parameter estimates for optimization algorithms"
  },

  "optimization_config": {
    "_comment": "Optimized optimization settings",
    
    "angle_filtering": {
      "enabled": true,
      "_enabled_note": "Focus optimization on key angular ranges for speed",
      "target_ranges": [
        {"min_angle": -10.0, "max_angle": 10.0},
        {"min_angle": 170.0, "max_angle": 190.0}
      ],
      "_target_ranges_note": "Angular ranges with best signal-to-noise ratio",
      "fallback_to_all_angles": true,
      "_fallback_to_all_angles_note": "Use all angles if target ranges have insufficient data",
      "performance_impact": {
        "typical_data_reduction": "80-90%",
        "expected_speedup": "3-5x faster",
        "memory_savings": "Significant"
      }
    },

    "classical_optimization": {
      "_comment": "High-performance classical optimization",
      "methods": ["Nelder-Mead"],
      "_methods_note": "Fast, robust methods prioritized",
      "method_options": {
        "Nelder-Mead": {
          "maxiter": 2000,
          "_maxiter_note": "Reduced from 3000 for faster convergence",
          "xatol": 1e-8,
          "_xatol_note": "Balanced precision vs speed",
          "fatol": 1e-8,
          "_fatol_note": "Function tolerance",
          "adaptive": true,
          "_adaptive_note": "Use adaptive algorithm for better convergence"
        }
      },
      "convergence": {
        "early_stopping": true,
        "_early_stopping_note": "Stop optimization when convergence criteria met",
        "patience": 50,
        "_patience_note": "Iterations without improvement before stopping"
      }
    },

    "mcmc_sampling": {
      "_comment": "Optimized MCMC configuration",
      "enabled": true,
      "sampler": "NUTS",
      "_sampler_note": "No-U-Turn Sampler (most efficient)",
      "draws": 5000,
      "_draws_note": "Reduced from 10000 for faster sampling",
      "tune": 500,
      "_tune_note": "Reduced tuning steps for speed",
      "chains": 4,
      "_chains_note": "Parallel chains for better convergence",
      "cores": 4,
      "_cores_note": "Match number of chains for optimal performance",
      "target_accept": 0.8,
      "_target_accept_note": "Balanced acceptance rate",
      "max_treedepth": 8,
      "_max_treedepth_note": "Reduced from 10 for faster sampling",
      
      "optimization": {
        "use_fast_compilation": true,
        "_use_fast_compilation_note": "Faster PyMC model compilation",
        "cache_model": true,
        "_cache_model_note": "Cache compiled model for repeated use"
      }
    }
  },

  "parameter_space": {
    "_comment": "Optimized parameter bounds",
    "bounds": [
      {"name": "D0", "min": 1e-3, "max": 1e6, "type": "log-uniform", "units": "Å²/s"},
      {"name": "alpha", "min": -2.0, "max": 2.0, "type": "uniform", "units": "dimensionless"},
      {"name": "D_offset", "min": -5000, "max": 5000, "type": "uniform", "units": "Å²/s"},
      {"name": "gamma_dot_t0", "min": 1e-6, "max": 1.0, "type": "log-uniform", "units": "s⁻¹"},
      {"name": "beta", "min": -2.0, "max": 2.0, "type": "uniform", "units": "dimensionless"},
      {"name": "gamma_dot_t_offset", "min": -0.1, "max": 0.1, "type": "uniform", "units": "s⁻¹"},
      {"name": "phi0", "min": -15.0, "max": 15.0, "type": "uniform", "units": "degrees"}
    ]
  },

  "advanced_settings": {
    "_comment": "Advanced optimization and validation settings",
    
    "data_loading": {
      "use_diagonal_correction": true,
      "vectorized_diagonal_fix": true,
      "_vectorized_diagonal_fix_note": "Faster vectorized correction vs loops"
    },
    
    "chi_squared_calculation": {
      "scaling_optimization": true,
      "_scaling_optimization_note": "Per-angle contrast/offset optimization",
      "uncertainty_estimation_factor": 0.1,
      "_uncertainty_estimation_factor_note": "Factor for uncertainty estimation",
      "minimum_sigma": 1e-10,
      "_minimum_sigma_note": "Minimum allowed uncertainty value",
      "fast_computation": true,
      "_fast_computation_note": "Use optimized chi-squared kernels",
      
      "validity_check": {
        "check_positive_D0": true,
        "check_positive_gamma_dot_t0": true,
        "check_positive_time_dependent": true,
        "check_parameter_bounds": true,
        "_note": "Parameter validation for physical consistency"
      }
    },
    
    "noise_model": {
      "use_simple_forward_model": false,
      "_use_simple_forward_model_note": "False for consistency with scaling optimization",
      "sigma_prior": 0.05,
      "_sigma_prior_note": "Reduced for faster MCMC convergence",
      "_scaling_consistency_note": "Configured for consistency between classical and MCMC methods"
    }
  },

  "output_settings": {
    "_comment": "Optimized output configuration",
    "base_directory": "./homodyne_results",
    "save_intermediate": false,
    "_save_intermediate_note": "Disabled for speed - enable for debugging",
    "detailed_summary": true,
    "_detailed_summary_note": "Include performance metrics in output",
    
    "file_formats": {
      "results_format": "json",
      "_results_format_note": "JSON for human readability, NPZ for performance",
      "compression": true,
      "_compression_note": "Compress output files to save space"
    },
    
    "performance_logging": {
      "enable_timing": true,
      "_enable_timing_note": "Log execution times for performance monitoring",
      "include_memory_usage": true,
      "_include_memory_usage_note": "Monitor memory consumption",
      "log_level": "INFO",
      "_log_level_note": "INFO for normal operation, DEBUG for detailed profiling"
    }
  },

  "validation_rules": {
    "_comment": "Optimized validation rules",
    "frame_range": {"minimum_frames": 10},
    "parameter_validation": {
      "strict_bounds": true,
      "_strict_bounds_note": "Reject parameters outside physical bounds",
      "fast_validation": true,
      "_fast_validation_note": "Use optimized validation routines"
    }
  },

  "test_configurations": {
    "_comment": "Optimized test configurations",
    "fast_test": {
      "description": "Quick test configuration for development",
      "classical_methods": ["Nelder-Mead"],
      "mcmc_draws": 100,
      "mcmc_tune": 50,
      "angle_filtering": true
    },
    "production_optimized": {
      "description": "Production configuration optimized for speed and accuracy",
      "classical_methods": ["Nelder-Mead"],
      "mcmc_draws": 5000,
      "mcmc_tune": 500,
      "enable_all_optimizations": true
    }
  }
}