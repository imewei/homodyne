[tool:pytest]
# Optimized CI configuration for GitHub Actions
testpaths = homodyne/tests/unit homodyne/tests/regression
addopts =
    --strict-config
    --strict-markers
    --tb=line
    --maxfail=10
    --color=yes
    -q
    --durations=10
    -m "not slow and not integration and not mcmc"
    -n auto
    --cov=homodyne
    --cov-report=xml
    --cov-report=term-missing
    --cov-fail-under=80
    -rA

# Timeout for CI tests
timeout = 300

# Parallel execution settings
addopts += --dist=loadscope

# Skip patterns for CI - exclude slow test directories
collect_ignore = ["homodyne/tests/performance", "homodyne/tests/system", "homodyne/tests/integration", "homodyne/tests/mcmc"]

# Custom markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    mcmc: marks tests requiring MCMC dependencies
    performance: marks performance-related tests
    benchmark: marks tests for benchmarking (requires pytest-benchmark)
    memory: marks tests that monitor memory usage
    regression: marks tests for performance regression detection
    import_time: marks tests that measure import performance
    optimization: marks tests for Phase 3 batch optimization features
    jax: marks tests requiring JAX dependencies
    gpu: marks tests that can utilize GPU acceleration (requires appropriate JAX installation)
    fast: marks tests that run quickly (< 1s)
    unit: marks unit tests (isolated, no external dependencies)
    system: marks system-level tests (require environment setup)
    ci_skip: marks tests to skip in CI environments
    ci: marks tests suitable for CI execution (unit and regression tests)
