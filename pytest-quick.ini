[tool:pytest]
# Quick test configuration for rapid development feedback
testpaths = homodyne/tests/unit
addopts =
    --strict-config
    --strict-markers
    --tb=short
    --maxfail=3
    -q
    -m "fast"
    --durations=5
    -rs

# Pytest markers for test categorization and selection
markers =
    # Execution time markers
    slow: marks tests as slow (deselect with '-m "not slow"')
    fast: marks tests that run quickly (< 1s)
    
    # Test type markers
    unit: marks unit tests (isolated, no external dependencies)
    integration: marks tests as integration tests
    system: marks system-level tests (require environment setup)
    regression: marks tests for performance regression detection
    
    # Feature-specific markers
    mcmc: marks tests requiring MCMC dependencies
    performance: marks performance-related tests
    benchmark: marks tests for benchmarking (requires pytest-benchmark)
    memory: marks tests that monitor memory usage
    import_time: marks tests that measure import performance
    optimization: marks tests for Phase 3 batch optimization features
    
    # Computational method markers
    irls: marks tests related to IRLS variance estimation and convergence
    vectorized: marks tests for vectorized/optimized computation methods
    numba: marks tests requiring Numba JIT compilation
    convergence: marks tests for iterative algorithm convergence behavior
    
    # Platform/dependency markers
    jax: marks tests requiring JAX dependencies
    gpu: marks tests that can utilize GPU acceleration (requires appropriate JAX installation)
    
    # Environment markers
    ci_skip: marks tests to skip in CI environments
    ci: marks tests suitable for CI execution (unit and regression tests)

# Minimal output for quick scanning
console_output_style = progress
