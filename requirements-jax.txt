# GPU-Accelerated MCMC Dependencies - Pure JAX/NumPyro Implementation
# Generated from pyproject.toml [project.optional-dependencies.jax]
# Latest update: Separated PyMC (CPU) and NumPyro (GPU) implementations

# Include core dependencies (PyMC for CPU-only MCMC)
-r requirements.txt

# Pure JAX/NumPyro stack for GPU-accelerated MCMC
# Linux systems with NVIDIA GPU will automatically get system CUDA 12.6+ support
jax[cuda12-local]>=0.4.20 ; sys_platform == 'linux'
jax>=0.4.20 ; sys_platform != 'linux'
jaxlib>=0.4.20

# NumPyro for pure JAX MCMC (no PyTensor dependencies)
numpyro>=0.13.2

# Architecture Notes:
# - 'homodyne --method mcmc': Uses CPU-only PyMC implementation (reliable, cross-platform)
# - 'homodyne-gpu --method mcmc': Uses GPU-accelerated NumPyro implementation (high-performance)
# - Both implementations provide identical likelihood: fitted = contrast * theory + offset
# - PyTensor compilation issues completely eliminated in GPU implementation
# - Automatic GPUâ†’CPU fallback in NumPyro implementation
#
# Environment Configuration:
# - CPU command: PYTENSOR_FLAGS="device=cpu,floatX=float64,optimizer=fast_compile"
# - GPU command: JAX handles all operations, PyTensor disabled
# - HOMODYNE_GPU_INTENT environment variable controls routing
#
# System Requirements for GPU:
# - Linux with NVIDIA GPU
# - CUDA 12.6+ and cuDNN 9.12+
# - Run 'homodyne-post-install --gpu' for setup verification
