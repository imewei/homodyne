# JAX dependencies for GPU acceleration with PyTensor environment variable auto-configuration
# Generated from pyproject.toml [project.optional-dependencies.jax]
# Latest update: JAX backend GPU acceleration and PyTensor environment variable auto-configuration

# Include core dependencies
-r requirements.txt

# JAX for GPU-accelerated numerical computations (backend handles GPU operations)
# Linux systems with NVIDIA GPU will automatically get system CUDA 12.6+ support
jax[cuda12-local]>=0.7.0 ; sys_platform == 'linux'
jax>=0.7.0 ; sys_platform != 'linux'
jaxlib>=0.4.35

# PyTensor environment variables automatically configured during pip install:
# PYTENSOR_FLAGS="device=cpu,floatX=float64,mode=FAST_COMPILE,optimizer=fast_compile,cxx="
# - JAX handles GPU operations for optimal performance
# - PyTensor uses CPU mode to avoid C compilation issues
# - No manual environment variable setup required

# Note: JAX backend GPU acceleration with PyTensor auto-configuration
# - JAX backend: Handles all GPU operations (MCMC sampling, numerical computations)
# - PyTensor: Configured for CPU mode, C++ compiler disabled (avoids linking issues)
# - Environment variables: Auto-configured during pip install homodyne-analysis
# - System CUDA: 12.6+ and cuDNN 9.12+ required for optimal performance
# - Virtual environments: conda/mamba activation scripts automatically created
#
# For manual environment variable verification:
# echo $PYTENSOR_FLAGS
# homodyne_gpu_status  # (conda/mamba environments only)
#
# See GPU_SETUP.md for detailed setup instructions
